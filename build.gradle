/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.4.1/samples
 */

plugins {
    id "com.palantir.docker-run" version "0.32.0"
    id "org.flywaydb.flyway" version "8.5.2"
    id 'java'
    id 'groovy'
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.postgresql:postgresql:42.3.3'
    implementation 'org.apache.groovy:groovy:4.0.1'
    implementation 'org.postgresql:postgresql:42.1.4'
    implementation 'org.apache.groovy:groovy-sql:4.0.1'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
}

loadProperties()

def loadProperties() {
    def configFile = file('src/main/resources/db.properties')
    Properties p = new Properties()
    p.load(new FileReader(configFile))
    def config = new groovy.util.ConfigSlurper().parse(p)
    project.ext.config = config
}

task printProperties {
    println "serverPassword:  $config.serverPassword"
    println "serverDatabase:  $config.serverDatabase"
    println "serverUser:  $config.serverUser"
}

dockerRun {
    name 'my-db'
    image 'bitnami/postgresql:14'
    volumes './db_data': '/bitnami/postgresql'
    ports '5432:5432'
    daemonize true
    env 'POSTGRESQL_PASSWORD': config.serverPassword, 'POSTGRESQL_DATABASE': config.serverDatabase
}

flyway {
    url = "jdbc:postgresql:${config.serverDatabase}"
    user = config.serverUser
    password = config.serverPassword
    locations = ['filesystem:db/migration']
    configurations = [ 'runtimeClasspath']
}

application {
    mainClass = 'populate.App'
}